jobs:
  build:
    environment:
      SERVICE: sqsd
    docker:
      - image: ${STAGING_ECR_URL}/docker-deploy
        aws_auth:
          aws_access_key_id: $STAGING_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $STAGING_AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application docker image
          command: |
            docker build -t ${STAGING_ECR_URL}/${SERVICE}:${CIRCLE_SHA1} .
            docker tag ${STAGING_ECR_URL}/${SERVICE}:${CIRCLE_SHA1} ${STAGING_ECR_URL}/${SERVICE}:latest
            docker tag ${STAGING_ECR_URL}/${SERVICE}:${CIRCLE_SHA1} ${PROD_ECR_URL}/${SERVICE}:latest
            docker tag ${STAGING_ECR_URL}/${SERVICE}:${CIRCLE_SHA1} ${PROD_ECR_URL}/${SERVICE}:latest

      - run:
          name: Push image
          command: |
            $(AWS_ACCESS_KEY_ID=$STAGING_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$STAGING_AWS_SECRET_ACCESS_KEY aws ecr get-login --no-include-email --region us-east-1)
            docker push $STAGING_ECR_URL/${SERVICE}:latest
            docker push $STAGING_ECR_URL/${SERVICE}:$CIRCLE_SHA1
            $(AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY aws ecr get-login --no-include-email --region us-east-1)
            docker push $PROD_ECR_URL/${SERVICE}:latest
            docker push $PROD_ECR_URL/${SERVICE}:$CIRCLE_SHA1
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              only:
                - master